= semantic_form_for(@event, :html => {:multipart => true}) do |f|
  = f.inputs :name => "Basic information" do
    = f.input :title
    = f.input :event_type, :collection => Event::TYPES
    = f.input :track, :collection => @conference.tracks if current_user.role == "admin"
    = f.input :time_slots, :as => :select, :collection => timeslots
    = f.input :language, :as => :select, :collection => @conference.language_codes, :include_blank => false
    = f.input :public, :as => :boolean, :hint => "Is this event visible in the public schedule?"
    = f.input :logo
  = f.inputs :name => "State" do
    = f.input :state, :collection => Event.available_states
  = f.inputs :name => "Time and place" do
    = f.input :start_time, :as => :select, :collection => start_times
    = f.input :room, :collection => @conference.rooms
  = f.inputs :name => "Detailed description" do
    = f.input :abstract, :input_html => {:rows => 4}, :hint => "One short paragraph that succinctly describes the event."
    = f.input :description,:input_html => {:rows => 4}, :hint => "A longer description of the event. Use this to give additional details that did not fit in the abstract. Both, abstract and description, will be shown on the conference website."
    = f.input :max_number_participants, :hint => "The maximum number of participants"
    = f.input :off_the_record, :as => :select, :collection => Event::OFF_THE_RECORD_NAMES
    = f.input :supporting_materials, :input_html => {:rows => 4}, :hint => "Any materials necessary to hold event"
    = f.input :specific_conditions_to_meet, :input_html => {:rows => 4}, :hint => "Specific conditions to be met in order to hold the event"
    = f.input :submission_level, :as => :select, :collection => Event::SUBMISSION_LEVELS
    = f.input :target_audience, :as => :select, :collection => Event::TARGET_AUDIENCES
  = f.inputs :name => "Notes" do
    = f.input :note, :input_html => {:rows => 2}, :hint => "visibility: admin only."
    = f.input :submission_note, :input_html => {:rows => 2}, :hint => "visibiliy: admin and user; additional information."
  = dynamic_association :links, "Links", f
  = dynamic_association :event_attachments, "Uploaded files", f
  = f.buttons do
    = f.commit_button :button_html => {:class => "primary"}
