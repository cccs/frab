%section
  .page-header
    .pull-right
      = action_button "primary", "Edit event", edit_event_path(@event), :hint => "Edit this event's data."
      = action_button "primary", "Edit people", edit_people_event_path(@event), :hint => "Edit this event's data."
      - if @event.transition_possible? :accept
        = action_button "success", "Accept event", update_state_event_path(@event, :transition => :accept, :send_mail => true), :method => :put, :hint => "Accept this event. The speaker(s) will be notified of the acceptance via email. If they have access to the call for participation system, they will receive a link to confirm their attendance as well." 
        = action_button "success", "Accept event (no email)", update_state_event_path(@event, :transition => :accept), :method => :put, :hint => "Accept this event without sending an automated email."
      - if @event.transition_possible? :reject
        = action_button "danger", "Reject event", update_state_event_path(@event, :transition => :reject, :send_mail => true), :method => :put, :confirm => "Are you sure?", :hint => "Reject this event. The speaker(s) will be notified of the rejection via email."
        = action_button "danger", "Reject event (no email)", update_state_event_path(@event, :transition => :reject), :method => :put, :confirm => "Are you sure?", :hint => "Reject this event without sending an automated email."
      - if @event.transition_possible? :confirm
        = action_button "", "Confirm event", update_state_event_path(@event, :transition => :confirm), :method => :put, :hint => "Confirm that the speaker(s) will be present and that the event will actually take place."
      - if @event.transition_possible? :cancel
        = action_button "danger", "Cancel event", update_state_event_path(@event, :transition => :cancel), :method => :put, :hint => "Mark this event as cancelled. Usually this means that the speakers had to cancel their appearance."
    %h1 Event: #{@event.title}
  %ul.tabs
    %li.active= link_to "Event Details", @event 
    %li= link_to "People", people_event_path(@event)
    %li= link_to "Ratings", event_event_rating_path(@event)
    %li= link_to "Feedback", event_event_feedbacks_path(@event)
  .row
    .span16
      - @event.conflicts.each do |conflict|
        = render "conflicts/#{conflict.conflict_type}", :conflict => conflict
  .row
    .span6
      %h2 Basic Information
      %p
        %b Track:
        = @event.track_name
      %p
        %b Event type:
        = @event.event_type
      %p
        %b State:
        = @event.state
      %p
        %b Language:
        = @event.language
      %p
        %b Public:
        = check_box_tag :public, @event.public, @event.public != 0, :disabled => true
      %p
        %b Average audience feedback:
        = number_with_precision @event.average_feedback, :precision => 1
    .span6
      %h2 Scheduling
      %p
        %b Time slots:
        = format_time_slots @event.time_slots
      %p
        %b Start time:
        = @event.start_time
      %p
        %b Room:
        = @event.room.try(:name)
    .span4
      = image_box @event.logo, :large
  .row
    .span16
      %h2 Content
  .row
    .span6
      %p
        %b Abstract:
        = simple_format @event.abstract
    .span10
      %p
        %b Description:
        = simple_format @event.description
      %p
        - if @event.links.any?
          %b Links:
          %br/
          - @event.links.each do |link|
            = link_to link.title, fix_http_proto(link.url)
            %br/
      %p
        - if @event.event_attachments.any?
          %b Files
          %ul
            - @event.event_attachments.each do |attachment|
              %li= link_to attachment.title, attachment.attachment.url
    .span10
      %p
        %b Notes(admin):
        = simple_format @event.note
    .span10
      %p
        %b Submission Notes(user and admin):
        = simple_format @event.submission_note
